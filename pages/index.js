/* eslint-disable @next/next/no-img-element */

import Link from "next/link";
import Head from "next/head";
import { sanityClient, urlFor } from "../client";
import AboutSection from "../components/AboutSection";
import SubscribeSection from "../components/SubscribeSection";
import Banner from "../components/Banner";
import styled from "styled-components";

// STYLES
export const PostsWrapper = styled.div`
  background: orange;
  border-left: solid 2px black;

  @media only screen and (max-width: 600px) {
    border-left: none;
    border-top: solid 2px black;
  }
`;

export const IndexGrid = styled.div`
  // background: orange;
  display: grid;
  grid-template-areas: "ls rs";
  grid-gap: 2em;

  @media only screen and (max-width: 600px) {
    grid-template-columns: 1fr;
    grid-template-areas:
      "ls"
      "rs";
  }
`;

export const Aside = styled.div`
  grid-area: ls;
  background: teal;
  border-right: solid 2px black;
  border-bottom: solid 2px black;
  // border-top: solid 2px black;
  width: 400px;
  @media only screen and (max-width: 800px) {
    width: 200px;
  }

  @media only screen and (max-width: 600px) {
    width: 100%;
  }
`;

export const PostTitle = styled.h2`
  padding: 10px 0px;
  text-align: center;
  text-transform: capitalize;
`;

export const MostRecentTitle = styled.h2`
  // padding-left: 105px;
  padding-top: 55px;
  text-align: center;
  font-size: 25px;
  text-decoration: underline;
  // border-bottom: solid 2px black;
  // color: teal;
  // text-shadow: 1px 1px 1px coral;
`;

export const PostsGrid = styled.div`
  grid-area: rs;
  padding: 50px 105px;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-gap: 2em;
  border-bottom: solid 2px #000;

  @media only screen and (max-width: 1024px) {
    grid-template-columns: repeat(2, 1fr);
    padding: 20px 40px;
  }

  @media only screen and (max-width: 834px) {
    grid-template-columns: 1fr;
    padding: 20px 60px;
  }

  @media only screen and (max-width: 600px) {
    padding: 40px 70px;
  }

  @media only screen and (max-width: 531px) {
    padding: 20px;
  }
`;

export const PostsSection = styled.div``;

export const ImgWrapper = styled.div`
  cursor: pointer;
  .img {
    width: 100%;
    height: 400px;
    border: solid 2px black;
    &:hover {
      opacity: 0.7;
      transition: 2s;
    }
  }

  @media only screen and (max-width: 1024px) {
    .img {
      height: 400px;
    }
  }
`;
//END STYLES

const Home = ({ posts }) => {
  return (
    <>
      <Head>
        <title>Writing To Better Health</title>
        <meta name="description" content="Generated by create next app" />
        <meta
          name="p:domain_verify"
          content="0eb994c4a2db7b6db7409469d390cc92"
        />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <IndexGrid>
        <Aside>
          <Banner />

          <SubscribeSection />
        </Aside>

        <PostsWrapper>
          <PostsSection>
            <MostRecentTitle> Most Recent Posts</MostRecentTitle>

            <PostsGrid>
              {posts &&
                posts.map((post, index) => (
                  <span key={index}>
                    <PostTitle>{post.title}</PostTitle>
                    <Link href={`post/${post.slug.current}`}>
                      <ImgWrapper>
                        <img
                          src={urlFor(post.image)}
                          alt="main pic"
                          className="img"
                        />
                      </ImgWrapper>
                    </Link>
                  </span>
                ))}
            </PostsGrid>
          </PostsSection>
        </PostsWrapper>
      </IndexGrid>
      <AboutSection />
    </>
  );
};

export const getServerSideProps = async () => {
  const query = '*[_type == "blog"]';
  const posts = await sanityClient.fetch(query);
  if (!posts.length) {
    return {
      props: {
        posts: [],
      },
    };
  } else {
    return {
      props: {
        posts,
      },
    };
  }
};

export default Home;
